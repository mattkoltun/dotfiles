# A valid snippet should starts with:
#
#		snippet trigger_word [ "description" [ options ] ]
#
# and end with:
#
#		endsnippet
#
# Snippet options:
#
#		b - Beginning of line.
#		i - In-word expansion.
#		w - Word boundary.
#		r - Regular expression
#		e - Custom context snippet
#		A - Snippet will be triggered automatically, when condition matches.
#
# Basic example:
#
#		snippet emitter "emitter properties" b
#		private readonly ${1} = new Emitter<$2>()
#		public readonly ${1/^_(.*)/$1/}: Event<$2> = this.$1.event
#		endsnippet
#
# Online reference: https://github.com/SirVer/ultisnips/blob/master/doc/UltiSnips.txt

snippet afuncc "async const function" b
const ${1:name} = async (${2:args}) => {
  ${3}
}
endsnippet

snippet funcc "const function" b
const ${1:name} = (${2:args}) => {
  ${3}
}
endsnippet

snippet afunc "async const function" b
async function ${1:name}(${2:args}) {
  ${3}
}
endsnippet

snippet func "function" b
function ${1:name}(${2:args}) {
  ${3}
}

endsnippet

snippet if "if statement" b
if (${1:condition}) {
	${2}
}
endsnippet

snippet ife "if else statement" b
if (${1:condition}) {
	${2}
} else {
	${3}
}
endsnippet

snippet switch "Switch statement" b
switch (${1}) {
	case "${3}":

	break;
	${4}
	default:
		${2}
}
endsnippet

snippet case "Case in switch" b
case "${1}":
	${2}
	break;
endsnippet

snippet iffe "if if else statement" b
if (${1:condition}) {
	${3}
} else if (${2:condition}) {
	${4}
} else {
	${5}
}
endsnippet
